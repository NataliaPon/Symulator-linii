
package gol;


import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.*;
import javax.swing.*;
import javax.swing.Timer;

/**
 * Okno stanowiace symulator stanowiska dyspozytorskiego
 * "linii produkcyjnej". W systemie przewidziane sa:
 * sprawdzanie czujnosci operatora, monitorowanie 
 * poprawnosci przebiegu procesu produkcyjnego,
 * zdefiniowane awarie pseudolosowe,
 * komunikaty dla kazdej wyjatkowej sytuacji
 * @author Natalia Poniatowska
 */

public class Stan extends javax.swing.JFrame {

    Timer t1; // odliczanie do wlaczenia czujki
    Timer t2; // odliczanie czasu na wcisniecie ENTER w czujce
    Timer t3; // odswierzanie temp rdzenia i wykorzystania procesora
    Timer t4; // losowanie awarii
    static int count =0;
    static int max=30;
    static int W1, W2, W3, W4;
    int P1,P2,P3,P4;
    double temp=0, wyk=0;
    Random r;
    
    public Stan() {
        initComponents();
        czujka();
        parametry();
        losowaAwaria();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Czujka = new javax.swing.JFrame();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        odliczanie = new javax.swing.JLabel();
        enter = new javax.swing.JTextField();
        error = new javax.swing.JDialog();
        blad = new javax.swing.JLabel();
        ok = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        koniec = new javax.swing.JButton();
        wznow = new javax.swing.JButton();
        tRdzenia = new javax.swing.JLabel();
        wykProc = new javax.swing.JLabel();
        S1 = new javax.swing.JSlider();
        prWent = new javax.swing.JLabel();
        S2 = new javax.swing.JSlider();
        ilWent = new javax.swing.JLabel();
        S3 = new javax.swing.JSlider();
        S4 = new javax.swing.JSlider();
        prLinii = new javax.swing.JLabel();
        ilLinii = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        czas = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        Czujka.setMinimumSize(new java.awt.Dimension(384, 194));

        jLabel9.setText("Aby potwierdzic obecnosc wcisnij ENTER");

        jLabel10.setText("Pozostalo czasu:");

        enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterActionPerformed(evt);
            }
        });
        enter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                enterKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout CzujkaLayout = new javax.swing.GroupLayout(Czujka.getContentPane());
        Czujka.getContentPane().setLayout(CzujkaLayout);
        CzujkaLayout.setHorizontalGroup(
            CzujkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CzujkaLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(CzujkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enter, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(CzujkaLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(odliczanie, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        CzujkaLayout.setVerticalGroup(
            CzujkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CzujkaLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(CzujkaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(odliczanie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(enter, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        error.setMinimumSize(new java.awt.Dimension(450, 130));
        error.setModal(true);

        ok.setText("OK");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout errorLayout = new javax.swing.GroupLayout(error.getContentPane());
        error.getContentPane().setLayout(errorLayout);
        errorLayout.setHorizontalGroup(
            errorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(errorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(blad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, errorLayout.createSequentialGroup()
                .addContainerGap(326, Short.MAX_VALUE)
                .addComponent(ok, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );
        errorLayout.setVerticalGroup(
            errorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(errorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(blad, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(ok)
                .addGap(25, 25, 25))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Linia produkcyjna");
        setMinimumSize(new java.awt.Dimension(600, 510));
        setPreferredSize(new java.awt.Dimension(610, 550));
        getContentPane().setLayout(null);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Temperatura rdzenia");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(15, 12, 125, 35);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Wykorzystanie procesora");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(15, 53, 140, 29);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Predkosc wetylatorow");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(15, 94, 125, 41);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Ilosc dzialajacych wetylatorow");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(15, 141, 170, 36);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Predkosc lini produkcyjnej");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(15, 240, 150, 44);

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Ilosc dzialajacych liniii");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(15, 290, 150, 33);

        koniec.setBackground(new java.awt.Color(204, 0, 0));
        koniec.setText("Zatrzymanie produkcji");
        koniec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                koniecActionPerformed(evt);
            }
        });
        getContentPane().add(koniec);
        koniec.setBounds(101, 455, 176, 34);

        wznow.setBackground(new java.awt.Color(0, 204, 0));
        wznow.setText("Wznowienie produkcji");
        wznow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wznowActionPerformed(evt);
            }
        });
        getContentPane().add(wznow);
        wznow.setBounds(335, 455, 199, 34);

        tRdzenia.setForeground(new java.awt.Color(255, 255, 255));
        tRdzenia.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(tRdzenia);
        tRdzenia.setBounds(228, 12, 90, 35);

        wykProc.setForeground(new java.awt.Color(255, 255, 255));
        wykProc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(wykProc);
        wykProc.setBounds(228, 53, 90, 29);

        S1.setMajorTickSpacing(20);
        S1.setMinorTickSpacing(10);
        S1.setPaintTicks(true);
        S1.setValue(0);
        S1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                S1StateChanged(evt);
            }
        });
        getContentPane().add(S1);
        S1.setBounds(371, 94, 200, 40);

        prWent.setForeground(new java.awt.Color(255, 255, 255));
        prWent.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        prWent.setText("0");
        getContentPane().add(prWent);
        prWent.setBounds(254, 94, 64, 40);

        S2.setMajorTickSpacing(2);
        S2.setMaximum(10);
        S2.setMinorTickSpacing(1);
        S2.setPaintTicks(true);
        S2.setValue(0);
        S2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                S2StateChanged(evt);
            }
        });
        getContentPane().add(S2);
        S2.setBounds(371, 141, 200, 37);

        ilWent.setForeground(new java.awt.Color(255, 255, 255));
        ilWent.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ilWent.setText("0");
        getContentPane().add(ilWent);
        ilWent.setBounds(261, 141, 57, 37);

        S3.setMajorTickSpacing(20);
        S3.setMinorTickSpacing(10);
        S3.setPaintTicks(true);
        S3.setValue(0);
        S3.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                S3StateChanged(evt);
            }
        });
        getContentPane().add(S3);
        S3.setBounds(371, 240, 200, 40);

        S4.setMajorTickSpacing(5);
        S4.setMaximum(20);
        S4.setMinorTickSpacing(1);
        S4.setPaintTicks(true);
        S4.setValue(0);
        S4.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                S4StateChanged(evt);
            }
        });
        getContentPane().add(S4);
        S4.setBounds(371, 286, 200, 37);

        prLinii.setForeground(new java.awt.Color(255, 255, 255));
        prLinii.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        prLinii.setText("0");
        getContentPane().add(prLinii);
        prLinii.setBounds(254, 240, 64, 40);

        ilLinii.setForeground(new java.awt.Color(255, 255, 255));
        ilLinii.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ilLinii.setText("0");
        getContentPane().add(ilLinii);
        ilLinii.setBounds(254, 286, 64, 37);

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Bezpieczna temperatura rdzenia: 0-60 *C, maksymalna dopuszczalna temperatura rdzenia: 75 *C");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(15, 341, 547, 23);

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Zalecane wykorzystanie procesora: 5-80%, maksymalne dopuszczalne wykorzystanie procesora: 95%");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(15, 370, 560, 26);

        czas.setForeground(new java.awt.Color(153, 153, 153));
        czas.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        getContentPane().add(czas);
        czas.setBounds(526, 12, 45, 28);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gol/rys1.jpg"))); // NOI18N
        getContentPane().add(jLabel7);
        jLabel7.setBounds(-6, 0, 630, 520);

        pack();
    }// </editor-fold>//GEN-END:initComponents
//definicja suwakow symulujacych parametry produkcji
    private void S1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_S1StateChanged
        
        JSlider source = (JSlider) evt.getSource();
        W1 = (int)source.getValue();
        prWent.setText(W1+"");
        count=0;
    }//GEN-LAST:event_S1StateChanged

    private void S3StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_S3StateChanged
        JSlider source = (JSlider) evt.getSource();
        W3 = (int)source.getValue();
        prLinii.setText(W3+"");
        count=0;
    }//GEN-LAST:event_S3StateChanged

    private void S4StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_S4StateChanged
        JSlider source = (JSlider) evt.getSource();
        W4 = (int)source.getValue();
        ilLinii.setText(W4+"");
        count=0;
    }//GEN-LAST:event_S4StateChanged

    private void enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterActionPerformed

    }//GEN-LAST:event_enterActionPerformed
//sprawdzenie czujnosci operatora przez wcisniecie ENTER
    private void enterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_enterKeyPressed
        if(KeyEvent.VK_ENTER==evt.getKeyCode())
        {
            Czujka.setVisible(false);
            t1.start();
            t2.stop();
            max=40;

        }
    }//GEN-LAST:event_enterKeyPressed
//zatrzymanie produkcji
    private void koniecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_koniecActionPerformed
        P1=S1.getValue();
        P2=S2.getValue();
        P3=S3.getValue();
        P4=S4.getValue();
        S1.setValue(0);
        S2.setValue(0);
        S3.setValue(0);
        S4.setValue(0);
        count=0;
    }//GEN-LAST:event_koniecActionPerformed
//wznowienie produkcji
    private void wznowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wznowActionPerformed
        S1.setValue(P1);
        S2.setValue(P2);
        S3.setValue(P3);
        S4.setValue(P4);
        count=0;
    }//GEN-LAST:event_wznowActionPerformed

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
        error.setVisible(false);
        count=0;
        tRdzenia.setOpaque(true);
        wykProc.setOpaque(true);
  
    }//GEN-LAST:event_okActionPerformed

    private void S2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_S2StateChanged
        JSlider source = (JSlider) evt.getSource();
        W2 = (int)source.getValue();
        ilWent.setText(W2+"");
        count=0;
    }//GEN-LAST:event_S2StateChanged
//definicja algorytmow liczenie temperatury rdzenia i
    //wykorzystania procesora oraz sprawdzanie
    //poprawnosci tych wartosci
    private void parametry()
    {
        t3 = new Timer(1000,new ActionListener() {
            
            @Override
            public void actionPerformed(ActionEvent e) {
                tRdzenia.setOpaque(true);
                wykProc.setOpaque(true);
                tRdzenia.setBackground(new Color(51,51,55));
                wykProc.setBackground(new Color(51,51,55));
                temp = temp/2 + W3/2 + W4 - W1/20 - W2/2;
                if(temp <0)
                    temp=0;
                if(temp>60)
                    tRdzenia.setBackground(Color.ORANGE);
                if(temp>75)
                {
                    tRdzenia.setBackground(Color.RED);
                    blad.setText("Uwaga. Za wysoka temperatura rdzenia. \n"
                            + "Nastepuje awaryjne wylaczenie produkcji.");
                    error.setVisible(true);
                    S1.setValue(0);
                    S2.setValue(0);
                    S3.setValue(0);
                    S4.setValue(0);
                }
                wyk = W2+W4 + 0.3*W1 + 0.4*W3;
                if(wyk>80)
                    wykProc.setBackground(Color.ORANGE);
                if(wyk>95)
                {
                    wykProc.setBackground(Color.RED);
                    blad.setText("Uwaga. Poziom wykorzystania procesora jest za wysoki. "
                            + "Nastepuje awaryjne wylaczenie produkcji.");
                    error.setVisible(true);
                    S1.setValue(0);
                    S2.setValue(0);
                    S3.setValue(0);
                    S4.setValue(0);
                }
                
                java.text.DecimalFormat df = new java.text.DecimalFormat();
                df.setMaximumFractionDigits(2);
                df.setMinimumFractionDigits(1);
                tRdzenia.setText(df.format(temp)+"*C");
                wykProc.setText(df.format(wyk)+"%");
            }
        });
        t3.start();
        
    }
    
    //losowanie zdefiniowanych awarii 
    private void losowaAwaria()
    {
     t4 = new Timer(100000,new ActionListener() {
            
            @Override
            public void actionPerformed(ActionEvent e) {
                r = new Random();
                int k =r.nextInt(4);
                
                switch(k)
                {
                    case 0:                        
                        blad.setText("Uwaga. Awaria systemu. Zostanie wymuszone zatrzymanie produkcji.");
                        S1.setValue(0);
                        S2.setValue(0);
                        S3.setValue(0);
                        S4.setValue(0);
                        break;
                    case 1:
                        blad.setText("Uwaga. Jeden z dostepnych wentylatorow ulegl awarii.");
                        S2.setValue(0);
                        int g = S2.getMaximum();
                        g--;
                        S2.setMaximum(g);
                        break;
                    case 2:
                        blad.setText("Uwaga. Predkosc obrotowa wentylatorow nieoczekianie spadla.");
                        int p = S1.getValue();
                        p-=40;
                        if(p<0)
                            p=0;
                        S1.setValue(p);
                        break;
                    case 3:
                        blad.setText("Uwaga. Jedna z dostepnych linii produkcyjnych ulegla awarii.");
                        S4.setValue(0);
                        int h = S4.getMaximum();
                        h--;
                        S4.setMaximum(h);
                        break;
                    case 4:
                        blad.setText("Uwaga. Nieoczekiwana awaria systemu.");
                        S1.setValue(100);
                        S2.setValue(10);
                        S3.setValue(100);
                        S4.setValue(20);
                        break;
                }
                error.setVisible(true);
            }
        });
        t4.start();  
    }
    //odliczanie czasu na wcisniecie ENTER w czujce
    public void odl() 
 {
     t2 = new Timer(1000,new ActionListener() {            
            @Override
            public void actionPerformed(ActionEvent e) {
                max--;
                odliczanie.setText(max+"");
                odliczanie.setOpaque(true);
                odliczanie.setBackground(new Color(204,204,204));
                if(max<10)
                    odliczanie.setBackground(Color.red);
                if(max==0)
                {        
                    t2.stop();
                    Logowanie log = new Logowanie();
                    log.setVisible(true);
                    Czujka.setVisible(false);
                    dispose();
                    max=30;
                    odliczanie.setBackground(Color.gray);
                }
            }
        });
        t2.start();   
 }
    //odliczanie czasu do uruchomienia czujki i uruchomienie jej
    private void czujka()
    {
        t1 = new Timer(1000,new ActionListener() {
            
            @Override
            public void actionPerformed(ActionEvent e) {
                count++;
                czas.setText(count+"");
                if(count==30)
                {                                      
                    Czujka.setVisible(true);
                    odl();
                    t1.stop();
                    count=0; 
                }
            }
        });
        t1.start();
    }
    
    

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Stan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Stan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Stan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Stan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Stan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame Czujka;
    private javax.swing.JSlider S1;
    private javax.swing.JSlider S2;
    private javax.swing.JSlider S3;
    private javax.swing.JSlider S4;
    private javax.swing.JLabel blad;
    private javax.swing.JLabel czas;
    private javax.swing.JTextField enter;
    private javax.swing.JDialog error;
    private javax.swing.JLabel ilLinii;
    private javax.swing.JLabel ilWent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton koniec;
    private javax.swing.JLabel odliczanie;
    private javax.swing.JButton ok;
    private javax.swing.JLabel prLinii;
    private javax.swing.JLabel prWent;
    private javax.swing.JLabel tRdzenia;
    private javax.swing.JLabel wykProc;
    private javax.swing.JButton wznow;
    // End of variables declaration//GEN-END:variables
}
